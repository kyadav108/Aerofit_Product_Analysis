# -*- coding: utf-8 -*-
"""Aerofit Case Study.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15pbwXu70GRUbjeAEOsxK-H8NKIcICo90
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

!wget https://d2beiqkhq929f0.cloudfront.net/public_assets/assets/000/001/125/original/aerofit_treadmill.csv?1639992749

df=pd.read_csv("aerofit_treadmill.csv?1639992749")

"""# 1.  Data Analysis"""

df.sample(5)

df.shape

df.info()

df.isna().sum()

df.nunique()

df[df.duplicated()].count()

"""Observation of Data Frame:

1. The dataframe has 180 rows and 9 columns.
2. The dataframe contains 8 columns. The data types of columns 'Product', 'Gender', and 'MaritalStatus' are objects, while the remaining columns are of type int64.
3. The dataframe does not have missing or duplicate values.
4. Columns 'Product', 'Education', 'MaritalStatus', 'Usage', and 'Fitness' have 3, 2, 82, 6, and 5 unique values, respectively. Whereas columns like 'Age', 'Income', and 'Miles' have 32, 62, and 37 unique values, respectively.

# 2. Detect Outliers
A. Find the outliers for every continuous variable in the dataset
"""

plt.figure(figsize=(16,6))

# Boxplot for column age
plt.subplot(1,3,1)
sns.boxplot(data=df["Age"])
plt.title("Age",fontsize=14, color="red")
plt.xlabel("Age")

# Boxplot for column income
plt.subplot(1,3,2)
plt.title("Income",fontsize=14, color="red")
sns.boxplot(data=df["Income"], color="yellow")
plt.xlabel("Income")

# Boxplot for column Miles
plt.subplot(1,3,3)
plt.title("Miles", fontsize=14, color="red")
sns.boxplot(data=df["Miles"], color="green")
plt.xlabel("Miles")
plt.show()

"""**Observation:**

Age:
1. The youngest customer is 18 years old.
2. The oldest customer is 50 years old.
3. 25% of the customers are 24 years old or younger.
4. 50% of the customers are 26 years old or younger.
5. 75% of the customers are 33 years old or younger.
6. There are outliers with ages between 46 and 50 years.

Income:
1. The minimum income is 29,562.
2. The maximum income is 104,581.
3. 25% of the incomes are 44,058 or lower.
4. 50% of the incomes are 50,596 or lower.
5. 75% of the incomes are 58,668 or lower.
6. There are 19 outliers where the income exceeds 80,000.

Miles covered by users per week:
1. The minimum miles recorded by users per week is 21.
2. The maximum miles recorded by users per week is 360.
3. 25% of users run 66 miles per week or less.
4. 50% of users run 94 miles per week or less.
5. 75% of users run 114 miles per week or less.
6. There are some outliers who run more than 180 miles per week.

B. Clipped Column miles.
"""

# Clipping column miles
df["Miles"].max(), df["Miles"].min()

miles_per=np.percentile(df["Miles"],[5,95])
miles_per

clipped_miles=df["Miles"].clip(47,200)

clipped_miles

# clipping column age
Age_per=np.percentile(df["Age"],[5,95])
Age_per

clipped_age=np.clip(df["Age"],20,43)
clipped_age

# Clipping column income
Income_per=np.percentile(df["Income"],[5,95])
Income_per

clipped_income=np.clip(df["Income"],34053.15, 90948.25)
clipped_income

# plot for clipped columns

plt.figure(figsize=(16,6))

plt.subplot(1,3,1)
plt.title("Age",fontsize=14, color="red")
sns.boxplot(data=clipped_age)

plt.subplot(1,3,2)
plt.title("Income",fontsize=14, color="red")
sns.boxplot(data=clipped_income, color="yellow")

plt.subplot(1,3,3)
plt.title("Miles", fontsize=14, color="red")
sns.boxplot(data=clipped_miles, color="green")

plt.show()

"""**Observations after clipping the data:**

Age:
1. The youngest customer is 20 years old.
2. The oldest customer is 43 years old.
3. 25% of the customers are 24 years old or younger.
4. 50% of the customers are 26 years old or younger.
5. 75% of the customers are 33 years old or younger.
6. Currently, there are no outliers.

Income:
1. After using the clip() function, the new minimum income is $34,053 and the maximum income is 90,948.
2. The first quartile (Q1), second quartile (Q2), and third quartile (Q3) are the same, which is 44,058, 50,596, and 58,668, respectively.
3. Now, we have fewer outliers.

Miles covered by users per week:
1. After using the clip() function, the new minimum miles is 43 and the maximum miles is 200.
2. The first quartile (Q1), second quartile (Q2), and third quartile (Q3) are the same, which is 66, 94, and 114 miles, respectively.
3. Now, we have fewer outliers who run above 180 miles.

# 3. Check if features like marital status, Gender, and age have any effect on the product purchased

A. Find if there is any relationship between the categorical variables and the output variable in the data.
"""

# Countplot of Gender
plt.figure(figsize=(12,6))

plt.subplot(1,2,1)
plt.title("Product use gender wise",fontsize=14, color="red")
sns.countplot(data=df, x=df["Gender"], hue=df["Product"])

# Countplot of Marital Status
plt.subplot(1,2,2)
plt.title("Marital status",fontsize=14, color="red")
sns.countplot(data=df, x=df["MaritalStatus"], hue=df["Product"])

plt.show()

"""**Observation:**

Usage of the product by gender:
1. With the help of the plot, we can observe that Product KP281 has an equal proportion of both genders.
2. Product KP481 has nearly equal numbers of male and female customers.
3. Product KP781 shows a significant difference between male and female customers, with 82% of customers being male.

Product usage by marital status:
1. We observe that married individuals are the predominant customers in all three categories of products.
2. Products KP281 and KP481 exhibit a ratio of 60:40 between married and single customers.
3. Product KP481 has a ratio of 58:42 between married and single customers.

"""

# Income contribution by Single vs Partners
sns.barplot(data=df, x=df["MaritalStatus"],y=df["Income"],hue=df["Product"])
plt.title("Income contribution by Singles Vs Partners",fontsize=14, color="red")

"""**Observation:**

As we know that married individuals are the primary customers for all three products, it's evident from this plot that they also contribute more to the income generated by each of the three products.

**B. Relation between continus variable and output variable:**
"""

# Relation between Miles, Income and Product
plt.figure(figsize=(12,6))
plt.subplot(1,2,1)
sns.scatterplot(data=df, x=df["Miles"], y=df["Income"], hue=df["Product"])
plt.title("Miles vs Income",fontsize=14, color="red")

#Relation between Age, Miles and Product
plt.subplot(1,2,2)
sns.scatterplot(data=df, x=df["Age"], y=df["Miles"], hue=df["Product"])
plt.title("Age vs Miles",fontsize=14, color="red")

"""**Obesrvation:**

**MILES VS INCOME**
1. By examining the Income vs Miles plot, we can observe that most customers fall within the range of 40 to 180 miles and have an income between 30,000 to  70,000.
2. Additionally, the majority of these customers are users of Product KP281 or KP781. However, there are outliers who have more than 200 miles and an income exceeding 80,000.
3. Interestingly, both of these outliers are users of Product KP781.
4. KP281 contribute most to the sale and top by 38.30%. followed by KP781 31.21% and KP481 30.29%.

**AGE VS MILES:**
1. We can observe that the majority of customers belong to the age range of 20-40.
2. Most customers run between 40 to 150 miles per week, but we do have outliers in both age and miles.
3. It's evident that almost all customers who run more than 150 miles per week use Product KP781.
"""

# Joint plot of Age and Income.

sns.jointplot(data=df, x=df["Age"], y=df["Income"], hue=df["Gender"])

"""**AGE VS INCOME:**
1. The majority of customers belong to the 20 to 40 age group and contribute between 30,000 to 70,000.
2. Both males and females contribute equally to this range. However, we do have some outliers who spend more than 80,000, and most of these outliers are male.

# 4 Representing the Probability

A. Find the marginal probability (what percent of customers have purchased
KP281, KP481, or KP781)
"""

cross_table=pd.crosstab(index=df["Product"], columns=df["Product"], margins=True)
cross_table.reset_index(inplace=True)
cross_table

# Probability of KP281
P_KP281=cross_table["KP281"][0]/cross_table["All"][3]
P_KP481=cross_table["KP481"][1]/cross_table["All"][3]
P_KP781=cross_table["KP781"][2]/cross_table["All"][3]

print("% of Customer have Purchase KP281:", round(P_KP281*100,2))
print("% of Customer have Purchase KP481:", round(P_KP481*100,2))
print("% of Customer have Purchase KP781:", round(P_KP781*100,2))

"""**Observation:**
The sales contribution of each product is as follows:

1. KP281 contributes 44.4%.
2. KP481 contributes 33.3%.
3. KP781 contributes 22.2%.

B. Find the probability that the customer buys a product based on each column.
"""

# The probability of sales based on gender
cross_table_g=pd.crosstab(index=df["Product"], columns=df["Gender"],margins=True)

cross_table_g.reset_index(inplace=True)
cross_table_g.columns.name=None
cross_table_g

# Percentage of Female Customer and Male Customer

for i in range(4):
   print(f"Product: {cross_table_g['Product'][i]}")
   P_female = cross_table_g["Female"][i] / cross_table_g["All"][i]
   P_male = cross_table_g["Male"][i] / cross_table_g["All"][i]

   print(f"The proportion of Female customers : {round(P_female * 100)}%")
   print(f"The proportion of Male customers: {round(P_male * 100)}%")
   print()

# The probability of product sales based on fitness level
cross_tab_f=pd.crosstab(index=df["Product"], columns=df["Fitness"], margins=True)
cross_tab_f.reset_index(inplace=True)
cross_tab_f.columns.name=None
cross_tab_f

for i in range(3):
  print("Product:",cross_tab_f['Product'][i])

  for n in range(1,6):
    Level=cross_tab_f[n][i]/cross_tab_f["All"][i]
    print(f"The proportion of level {n} customers : {round(Level * 100)}%")
  print()

# Per-week treadmill usage

cross_tab_u=pd.crosstab(df["Product"], df["Usage"], margins=True)
cross_tab_u.reset_index(inplace=True)
cross_tab_u.columns.name=None
cross_tab_u

for i in range(3):
    product = cross_tab_u['Product'][i]
    print("Product:", product)

    for day in range(2, 8):
        usage = cross_tab_u[day][i] / cross_tab_u["All"][i]
        print(f"The proportion of customers who usage treadmill {day} days per week: {round(usage * 100)}%")

    print()

"""C. Find the Conditional Probability that an event occurs given that another event has occurred."""

cross_table_g

# Usage of each product given that the user is male or female
for i in range(3):
  print(f"Product: {cross_table_g['Product'][i]}")
  print("The probability of product usage given that the customer is female:", round(cross_table_g["Female"][i] / cross_table_g["Female"][3] * 100) ,"%")
  print("The probability of product usage given that the customer is male:", round(cross_table_g["Male"][i] / cross_table_g["Male"][3] * 100) ,"%")
  print()

# Cross table of Column Product and Marital status.
cross_tab_m=pd.crosstab(index=df["Product"], columns=df["MaritalStatus"], margins=True)
cross_tab_m.reset_index(inplace=True)
cross_tab_m.columns.name=None
cross_tab_m

# The conditional probability of product sales based on marital status

for i in range(3):
  print(f"Product: {cross_tab_m['Product'][i]}")
  print("Probability of Product usge given that customer is single :", round(cross_tab_m["Single"][i]/ cross_tab_m.iloc[3][2] * 100) ,"%")
  print("Probability of Product usge given that customer is partner:", round(cross_tab_m["Partnered"][i] / cross_tab_m.iloc[3][1] * 100) ,"%")
  print()

"""# 5. The correlation among different factors"""

df_corr=df[["Age","Education","Usage","Fitness","Income","Miles"]].corr()
df_corr*100

sns.heatmap(df[["Age","Education","Usage","Fitness","Income","Miles"]].corr(), annot=True)

"""**Observation:** Corelation between Columns

Upon analyzing the ubove plot we can say:
1. Age display high correlation with income, with education showing a secondary correlation.
2. Usage displays a significant correlation with miles, with fitness following closely. Furthermore, fitness is strongly correlated with miles, age, income, and education.
3. Income shows a pronounced correlation with education, with miles, fitness, and usage following suit. These correlations provide valuable insights into the interplay between various factors within the dataset.

# 6. Customer profiling and recommendation

**Product KP281:**

1. Market Share: 44.4%.
2. Target Age Group: 18-40.
3. Usage Preference: 53% for running ≤ 150 miles/week.
4. Income Range: 20,000 to 70,000 (In $) (51%).
5. Gender Preference: Female (53%).
6. Marital Status Preference: Single (44%), Partner (45%).
7. Treadmill Usage: 2 days: 24%, 3 days: 46%, 4 days: 28%, 5 days: 2%.
8. Fitness Level: Level 3 (68%).

**Product KP481:**

1. Market Share: 33.2%.
2. Target Age Group: 18-40.
3. Usage Preference: 38% for running ≤ 150 miles/week.
4. Income Range: 20,000 to 70,000 (In $) (38%).
5. Gender Preference: Female (38%).
6. Marital Status Preference: Single (33%), Partner (34%).
7. Treadmill Usage: 2 days: 23%, 3 days: 52%, 4 days: 20%, 5 days: 5%.
8. Fitness Level: Level 3 (65%).

**Product KP781:**

1. Market Share: 22.2%.
2. Target Age Group: 23-35.
3. Usage Preference: 84% for running 150 miles/week.
4. Income Range: > 70,000(In $) (100%).
5. Gender Preference: Male (32%).
6. Marital Status Preference: Single (23%), Partner (21%).
7. Treadmill Usage: 4 days: 45%, 5 days: 30%, 6 days: 18%, 7 days: 5%.
8. Fitness Level: Level 5 (72%).

**Insights:**

1. KP281 is the most popular product, which means a lot of people like it and want to buy it. To keep this popularity, companies should advertise it well and make it even better.

2. Many young people, between 18 and 40 years old, really like KP281 and KP481. This means companies should advertise these products in a way that appeals to young people's tastes and lifestyles.

3. KP781 is liked by people who have more money,($70,000 and more). By adding special features to make it even better, companies can increse profit on the product.

4. Knowing how often people use treadmills and how fit they are can help companies make better products and decide how to sell them. For example, KP781 users use treadmills a lot and like intense workouts, like running 150 miles (and more in some cases) a week. By using this information companies can focus on making treadmills to target those users.

5. Customizing ads and products based on whether someone is male or female, or if they're single or in a relationship, can make customers happier. For instance, KP281 is a bit more popular with single women, while KP781 is liked more by single men. This means companies can approch target users.

6. Looking at age, income, education, product use, and fitness levels can give companies insight into what customers prefer. For example, there's a strong correlation between income, treadmill usage, and fitness level. This suggests that people who work out more and are fitter are willing to spend more.
"""

from google.colab import drive
drive.mount('/content/drive')

!pip install nbconvert

!pip install pypdf

!sudo apt-get install texlive-xetex texlive-fonts-recommended texlive-plain-generic

!pwd

!jupyter nbconvert --to pdf /content/drive/MyDrive/Colab Notebooks/Aerofit Case Study.ipynb